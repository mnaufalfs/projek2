# .github/workflows/ci-cd.yml
name: CI/CD Pipeline for PHP App

on:
  push:
    branches:
      - main # Workflow akan berjalan setiap kali ada push ke branch 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Menggunakan runner GitHub Actions berbasis Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Mengambil kode sumber dari repositori GitHub

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Menyiapkan Docker Buildx untuk build yang lebih baik

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Melakukan login ke Docker Hub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5 # Membangun Docker image dan mendorongnya ke Docker Hub
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rental_kendaraan_new:latest # Tag image dengan username Docker Hub dan nama repo Anda

      - name: Copy Docker Compose and Nginx/Supervisor configs to EC2
        uses: appleboy/scp-action@v0.1.7 # Action untuk menyalin file ke server via SCP
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml,nginx/,supervisor/" # Salin file dan folder ini
          target: "/var/www/rental_kendaraan_new" # Ke direktori proyek di VPS EC2
          # Jika Anda ingin menghapus semua isi direktori target sebelum menyalin, gunakan rm_rf: true
          # HATI-HATI: Ini akan menghapus semua yang ada di /var/www/rental_kendaraan_new di VPS
          # rm_rf: true

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0 # Action untuk koneksi SSH otomatis ke EC2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Starting deployment on EC2 at $(date)..."
            # Pindah ke direktori proyek di VPS
            cd /var/www/rental_kendaraan_new
            
            # Login ke Docker Hub di VPS (penting agar VPS bisa pull image privat jika ada)
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Tarik image Docker terbaru dari Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/rental_kendaraan_new:latest

            # Hentikan dan hapus container lama
            sudo docker-compose down

            # Jalankan aplikasi dengan Docker Compose di mode detached (-d)
            # --build: Membangun kembali image lokal jika Dockerfile telah berubah
            #          (Meskipun kita sudah pull, ini bisa menjadi fallback)
            # --remove-orphans: Menghapus kontainer layanan yang tidak lagi didefinisikan dalam docker-compose.yml
            sudo docker-compose up -d --build --remove-orphans

            # Bersihkan image dan container Docker yang tidak terpakai di VPS
            sudo docker system prune -a -f

            echo "Deployment finished successfully at $(date)."