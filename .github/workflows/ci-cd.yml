name: CI/CD to DockerHub and EC2

on:
  push:
    branches:
      - main # Ganti dengan branch utama Anda jika berbeda

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/rental-kendaraan:${{ github.sha }}

    - name: Upload docker-compose.yml to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yml" # Path ke docker-compose.yml di runner GitHub Actions
        target: "/home/ubuntu/rental_kendaraan_new/" # Direktori tujuan di EC2

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Pergi ke direktori proyek di EC2
          cd /home/ubuntu/rental_kendaraan_new/

          # Pull the latest Docker image (pastikan tag sesuai dengan yang Anda push)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/rental-kendaraan:${{ github.sha }}

          # Stop and remove existing containers (if any)
          sudo docker-compose down --remove-orphans || true

          # Create .env file with secrets for docker-compose
          echo "DB_USER=${{ secrets.DB_USER }}" > .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env

          # Start containers with the new image
          sudo docker-compose up -d

          # Clean up old Docker images (optional, but good practice)
          sudo docker image prune -f